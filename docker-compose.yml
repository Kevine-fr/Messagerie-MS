version: "3.8"

services:
  db:
    image: mysql:5.7
    container_name: mysql_messagerie
    volumes:
      - db_data:/var/lib/mysql
      - .:/workspace
    working_dir: /workspace
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password  
      MYSQL_DATABASE: messagerie  
      MYSQL_PASSWORD: password    
    networks:
      - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_messagerie
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8090:80"
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: password
    networks:
      - backend
    volumes:
      - .:/workspace
    working_dir: /workspace

  app:
    build:
      context: ./user_service
      dockerfile: Dockerfile.user
    container_name: user_service
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
      - kafka
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: messagerie
      DB_USERNAME: root
      DB_PASSWORD: password
    networks:
      - backend
    volumes:
      - .:/workspace
    working_dir: /workspace/user_service
    command: sh -c "composer install && php artisan serve --host=0.0.0.0 --port=8000"


  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper_messagerie
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend
    volumes:
      - .:/workspace
    working_dir: /workspace

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka_messagerie
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - backend
    volumes:
      - .:/workspace
    working_dir: /workspace

  mongodb:
    image: mongo:6
    container_name: mongodb_messagerie
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - .:/workspace
    working_dir: /workspace
    networks:
      - backend

  nodejs:
    build:
      context: ./message_service
      dockerfile: Dockerfile.messaging
    container_name: message_service
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - mongodb
    networks:
      - backend
    volumes:
      - .:/workspace
    working_dir: /workspace/message_service
    environment:
      - MONGO_URI=mongodb://mongodb:27017/messages_db

volumes:
  db_data:
  mongodb_data:

networks:
  backend:
